archivesBaseName = "${mod_name.replace(" ", "")}-Common-${minecraft_version}"

dependencies {
    implementation "com.hypherionmc:rpcsdk:1.0"
    implementation("me.hypherionmc.sdlink:mcdiscordformatter-1.19.1:2.0.0")
}

shadowJar {
    from sourceSets.main.output
    dependencies {
        include(dependency("me.hypherionmc.moon-config:core:${moon_config}"))
        include(dependency("me.hypherionmc.moon-config:toml:${moon_config}"))
        include(dependency("me.hypherionmc.sdlink:mcdiscordformatter-1.19.1:2.0.0"))

        relocate 'me.hypherionmc.moonconfig', 'shadow.hypherionmc.moonconfig'
        relocate 'me.hypherionmc.mcdiscordformatter', 'shadow.hypherionmc.mcdiscordformatter'
    }
    setArchiveClassifier("dev")
}

/**
 * ===============================================================================
 * =       DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING        =
 * ===============================================================================
 */

unimined.minecraft {
    fabric {
        loader fabric_loader
    }

    defaultRemapJar = false
}

processResources {
    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {
        expand buildProps
    }
}

/**
 * Publishing Config
 */
publishing {
    publications {
        mavenCommon(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            pom.withXml {
                Node pomNode = asNode()
                pomNode.dependencies.'*'.findAll() {
                    it.artifactId.text() == 'regutils-joined-fabric' ||
                            it.artifactId.text() == 'core' ||
                            it.artifactId.text() == 'toml'
                }.each() {
                    it.parent().remove(it)
                }
            }
        }
    }

    repositories {
        maven {
            url "https://maven.firstdark.dev/" + (project.release ? "releases" : "snapshots")
            credentials {
                username System.getenv("MAVEN_USER")
                password System.getenv("MAVEN_PASS")
            }
        }
    }
}