--- a/Forge/src/main/java/com/hypherionmc/craterlib/mixin/ConfigScreenHandlerMixin.java
+++ b/Forge/src/main/java/com/hypherionmc/craterlib/mixin/ConfigScreenHandlerMixin.java
@@ -1,6 +1,7 @@
 package com.hypherionmc.craterlib.mixin;
 
 import com.hypherionmc.craterlib.client.gui.config.CraterConfigScreen;
+import com.hypherionmc.craterlib.core.config.AbstractConfig;
 import com.hypherionmc.craterlib.core.config.ConfigController;
 import com.hypherionmc.craterlib.core.config.ModuleConfig;
 import com.hypherionmc.craterlib.core.config.annotations.NoConfigScreen;
@@ -28,9 +29,9 @@
      */
     @Inject(at = @At("RETURN"), method = "getScreenFactoryFor", cancellable = true, remap = false)
     private static void injectConfigScreen(IModInfo selectedMod, CallbackInfoReturnable<Optional<BiFunction<Minecraft, Screen, Screen>>> cir) {
-        ConfigController.getMonitoredConfigs().forEach((conf, watcher) -> {
+        ConfigController.getWatchedConfigs().forEach((conf, watcher) -> {
             if (!conf.getClass().isAnnotationPresent(NoConfigScreen.class)) {
-                ModuleConfig config = (ModuleConfig) conf;
+                AbstractConfig config = watcher.getLeft();
                 if (config.getModId().equals(selectedMod.getModId())) {
                     cir.setReturnValue(
                             Optional.of((minecraft, screen) -> new CraterConfigScreen(config, screen))
